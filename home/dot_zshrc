# my .zshrc
# still learning zsh
#
#set -x
#
########################################################################
export WORK_HOME=$HOME/work
export PROJECTS_HOME=$HOME/Projects
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export TZ="America/New_York"
# gnu coreutils for ls
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
# sqlite3 from brew
export PATH="/usr/local/opt/sqlite/bin:$PATH"
# my bin
# TODO should move this to ~/.local/bin but need to review deps
export PATH="$HOME/bin:$PATH"
# brew doctor recommends
export PATH="$PATH:/usr/local/sbin"

########################################################################
# editing and paging
export PAGER="less -g -R -J -r"
# never want these tools to use pager
export AWS_PAGER=""
export GIT_PAGER=""
# use vi style when we have a choice
export VISUAL=vi
export EDITOR=vi
# use nvim when we can
if [[ -e /usr/local/bin/nvim ]];then
  export EDITOR=/usr/local/bin/nvim
  alias vi=/usr/local/bin/nvim
  alias vim=/usr/local/bin/nvim
fi

########################################################################
# setup oracle instant client 12
export ORACLE_HOME="$HOME/bin/instantclient_12_1"
export OCI_DIR="$ORACLE_HOME"
export TNS_NAMES="$ORACLE_HOME"
export TNS_ADMIN="$ORACLE_HOME"
export DYLD_LIBRARY_PATH="$ORACLE_HOME:$DYLD_LIBRARY_PATH"
export LD_LIBRARY_PATH="$ORACLE_HOME"
export PATH="$PATH:$ORACLE_HOME"
export NLS_LANG="AMERICAN_AMERICA.UTF8"

########################################################################
# setup oracle sqlcl
export LD_LIBRARY_PATH=$HOME/bin/sqlcl/lib
export PATH=$HOME/bin/sqlcl/bin:$PATH

########################################################################
# setup golang
export PATH=$PATH:/usr/local/opt/go/libexec/bin
export GOPATH=$HOME/work/gocode

########################################################################
# setup java
# Set java 8 as default
if [ -e /usr/libexec/java_home ];then
  export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
  alias j8="export JAVA_HOME=\$(/usr/libexec/java_home -v 1.8); java -version"
  alias j10="export JAVA_HOME=\$(/usr/libexec/java_home -v 10); java -version"
  alias j11="export JAVA_HOME=\$(/usr/libexec/java_home -v 11); java -version"
  alias j12="export JAVA_HOME=\$(/usr/libexec/java_home -v 12); java -version"
fi

########################################################################
# setup ruby environment with rbenv
test -e rbenv && eval "$(rbenv init -)"

########################################################################
# setup python environment with pyenv and virtualenv
# export PATH="/usr/local/opt/python/libexec/bin:$PATH"

# HACK to fix pure prompt install
fpath=( "$HOME/.zfunctions" $fpath )

# antigen from brew
# source /usr/local/share/antigen.zsh
source /usr/local/share/antigen/antigen.zsh
# load oh-my-zsh library
antigen use oh-my-zsh
# touchbar
# antigen theme https://github.com/iam4x/zsh-iterm-touchbar
# theme
# author suggests NOT using antigen theme pure
#antigen bundle joel-porquet/zsh-dircolors-solarized.git
antigen bundle sindresorhus/pure
# git
antigen bundle git
# antigen bundle git-extras
# python
# antigen bundle python
# antigen bundle pip
antigen bundle virtualenv
# node
#antigen bundle node
#antigen bundle npm
# ruby
#antigen bundle rvm
#antigen bundle gem
# misc
antigen bundle aws
# antigen bundle tmuxinator
# osx
if [[ "$(uname -o)" == "Darwin" ]]; then
    antigen bundle brew
    antigen bundle osx
fi
# fish style
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
## do it!
antigen apply

########################################################################
# setup color terminal
# use ohmyzsh seems to set this, disabling because conflict with LS_COLORS
unset LSCOLORS
# ls colors seems broken after macos
test -e /usr/local/bin/gls && alias ls='gls --color=auto'

# add more color with grc generic colourizer
test -e /usr/local/etc/grc.zsh && source /usr/local/etc/grc.zsh

if [[ -e /usr/local/bin/exa ]]; then
  alias ls='exa --icons'
  alias ll='exa --icons --long --all '
  alias lsatr='exa --icons --long --all --sort modified'
fi

########################################################################
# setup zsh
HISTFILE=$HOME/.zhistory
HISTSIZE=SAVEHIST=5000
# don't save passwords in history
HISTORY_IGNORE=todo:jrnl:today:next:today:tomorrow:week:wl:work:worklog
setopt HIST_IGNORE_SPACE
setopt SHARE_HISTORY
setopt HASH_LIST_ALL

# Disable autocorrect guesses. Happens when typing a wrong
unsetopt CORRECT
# Disable autocorrection
DISABLE_CORRECTION="true"

########################################################################
# customize touchbar
# source ~/.zsh/zsh-apple-touchbar/zsh-apple-touchbar.zsh

########################################################################
# setup iterm on macos
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

########################################################################
# setup powerline for tmux and vi
powerline-daemon -q

########################################################################
# private environment stuff that should not be synced to github
test -e $HOME/.bash_private && source $HOME/.bash_private

test -e /usr/local/bin/finto-helpers.sh && source /usr/local/bin/finto-helpers.sh

########################################################################
# setup op
alias ops='eval $(op signin)'
alias ops-check='op list vaults'

########################################################################
# set keymappings
# vi mode has to be set after antigen oh-my-zsh else it gets lost
bindkey -v
# macbook pro with touchbar and ipad both have no ESC key, map them to jj
bindkey -M viins 'jj' vi-cmd-mode

########################################################################
# calendars
# TODO move these into shell scripts
alias today='khal calendar --format "{calendar-color}{start-end-time-style} {title} {location}"'
alias next='khal list --format "{calendar-color}{start-end-time-style} {title} {location}" $(date "+%Y-%m-%d 00:00") $(date "+%Y-%m-%d 23:59")'
alias tomorrow='khal list --format "{calendar-color}{start-end-time-style} {title} {location}" $(date --date=tomorrow "+%Y-%m-%d 00:00") $(date --date=tomorrow "+%Y-%m-%d 23:59")'
alias week='khal list --format "{calendar-color}{start-end-time-style} {title} {location}" $(date --date="last monday" "+%Y-%m-%d 00:00") $(date --date="next sunday" "+%Y-%m-%d 23:59") --once'

########################################################################
# setup jira
export JIRA_CONFIG="$HOME/.jira/config.json"

########################################################################
# setup calendar syncing
alias sync-cal='vdirsyncer sync outlook'
alias sync-cals='vdirsyncer sync'
alias sync-cals-git='pushd;cd $HOME/.local/share/calendars;git add *;git commit -m $(date "+%Y-%m-%d-%H-%M-%S") -a;popd'

########################################################################
# setup perl
PATH="$HOME/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"$HOME/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"; export PERL_MM_OPT;

########################################################################
# setup conda python
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
#__conda_setup="$('$HOME/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
#if [ $? -eq 0 ]; then
#    eval "$__conda_setup"
#else
#    if [ -f "$HOME/opt/miniconda3/etc/profile.d/conda.sh" ]; then
#        . "$HOME/opt/miniconda3/etc/profile.d/conda.sh"
#    else
#        export PATH="$HOME/opt/miniconda3/bin:$PATH"
#    fi
#fi
#unset __conda_setup
# <<< conda initialize <<<

########################################################################
# setup opam 
# test -r /Users/wlindsey/.opam/opam-init/init.zsh && . /Users/wlindsey/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# fin
