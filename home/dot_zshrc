# my .zshrc
# still learning zsh
#
# set -x
#
########################################################################
export XDG_CONFIG_HOME=$HOME/.config
export WORK_HOME=$HOME/work
export PROJECTS_HOME=$HOME/Projects

########################################################################
# Local
export TERM=xterm-256color
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export TZ="America/New_York"
# export TZ="America/Los_Angeles"

########################################################################
# Paths
# pathing getting complicated across OS and now arch
if [[ $(uname -m) == "arm64" ]];then
  export PATH="/opt/homebrew/opt:$PATH:/usr/local/opt"
fi

# my bin and local bin
export PATH="$HOME/bin:$HOME/.local/bin:$PATH"
# brew doctor recommends
export PATH="$PATH:/usr/local/sbin"

########################################################################
# setup gcc llvm
if [[ $(uname -s) == "Darwin" ]];then
  if [[ "$(uname -m)" == "arm64" ]];then
    export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
    export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
    export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
    # To use the bundled libc++ please add the following LDFLAGS:
    # LDFLAGS="-L/opt/homebrew/opt/llvm/lib/c++ -Wl,-rpath,/opt/homebrew/opt/llvm/lib/c++"
  fi
fi

########################################################################
# setup golang
if [[ -d "$HOME/.local/go" ]];then
  # export GOROOT=unused
  export GOPATH=$HOME/.local/go
  export PATH=${PATH}:${GOPATH}/bin
fi

########################################################################
# setup java
SKIP_JAVA=Y
if [[ "N" == ${SKIP_JAVA} ]];then
  # TODO support macos m2
  # /opt/homebrew/opt/openjdk/bin/java
  [[ -d "/usr/local/opt/openjdk/bin" ]] && export PATH="/usr/local/opt/openjdk/bin:$PATH"
  # Set java 8 as default
  if [ -e /usr/libexec/java_home ];then
    export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
    alias j8="export JAVA_HOME=\$(/usr/libexec/java_home -v 1.8); java -version"
    alias j10="export JAVA_HOME=\$(/usr/libexec/java_home -v 10); java -version"
    alias j11="export JAVA_HOME=\$(/usr/libexec/java_home -v 11); java -version"
    alias j12="export JAVA_HOME=\$(/usr/libexec/java_home -v 12); java -version"
  fi
fi

########################################################################
# setup ruby environment with rbenv
test -e rbenv && eval "$(rbenv init -)"

########################################################################
# setup node environment with nvm
export NVM_DIR="$HOME/.nvm"
if [[ -s "/opt/homebrew/opt/nvm/nvm.sh" ]];then
  . "/opt/homebrew/opt/nvm/nvm.sh"
  . "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"
fi

########################################################################
# setup python environment with pyenv and virtualenv
export PYENV_ROOT="$HOME/.pyenv"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

########################################################################
# setup sqlite3
if [[ $(uname -s) == "Darwin" ]];then
  if [[ $(uname -m) == "arm64" ]];then
    # macos apple silicon
    export PATH="/opt/homebrew/opt/sqlite3/bin:$PATH"
    export LDFLAGS="-L/opt/homebrew/opt/sqlite3/lib"
    export CPPFLAGS="-I/opt/homebrew/opt/sqlite3/include"
    export PKG_CONFIG_PATH="/opt/homebrew/opt/sqlite3/lib/pkgconfig"
  else
    export PATH="/usr/local/opt/sqlite/bin:$PATH"
  fi
fi

########################################################################
# setup mysql
if [[ -d "/opt/homebrew/opt/mysql-client/bin" ]];then
  export PATH="/opt/homebrew/opt/mysql-client/bin:$PATH"
  export LDFLAGS="-L/opt/homebrew/opt/mysql-client/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/mysql-client/include"
  export PKG_CONFIG_PATH="/opt/homebrew/opt/mysql-client/lib/pkgconfig"
fi

########################################################################
# setup postgres
if [[ -d "/opt/homebrew/opt/postgresql@15/bin" ]];then
  export PATH="/opt/homebrew/opt/postgresql@15/bin:$PATH"
  export LDFLAGS="-L/opt/homebrew/opt/postgresql@15/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/postgresql@15/include"
  export PKG_CONFIG_PATH="/opt/homebrew/opt/postgresql@15/lib/pkgconfig"
fi

########################################################################
# setup oracle instant client 12
# TODO move ORACLE_HOME to ~/.local
if [[ -d "$HOME/bin/instantclient_12_1" ]];then
  export ORACLE_HOME="$HOME/bin/instantclient_12_1"
  export OCI_DIR="$ORACLE_HOME"
  export TNS_NAMES="$ORACLE_HOME"
  export TNS_ADMIN="$ORACLE_HOME"
  export DYLD_LIBRARY_PATH="$ORACLE_HOME:$DYLD_LIBRARY_PATH"
  export LD_LIBRARY_PATH="$ORACLE_HOME"
  export PATH="$PATH:$ORACLE_HOME"
  export NLS_LANG="AMERICAN_AMERICA.UTF8"
fi

########################################################################
# setup oracle sqlcl
if [[ -d "$HOME/bin/sqlcl" ]];then
  export LD_LIBRARY_PATH=$HOME/bin/sqlcl/lib
  export PATH=$HOME/bin/sqlcl/bin:$PATH
fi

########################################################################
# editing and paging
export PAGER="less -g -R -J -r"
# never want these tools to use pager
export AWS_PAGER=""
export GIT_PAGER=""
# use vi style when we have a choice
export VISUAL=vi
export EDITOR=vi
# use nvim when we can
if [[ -e /usr/local/bin/nvim ]];then
  export EDITOR=/usr/local/bin/nvim
  alias vi=/usr/local/bin/nvim
  alias vim=/usr/local/bin/nvim
fi

########################################################################
# setup color terminal
# add more color with grc generic colourizer
test -e /usr/local/etc/grc.zsh && source /usr/local/etc/grc.zsh

########################################################################
# setup ls stuff

alias ll='ls -l --color=auto'

if [[ -e /usr/local/bin/exa ]]; then
  alias ls='exa --icons'
  alias ll='exa --icons --long --all '
  alias lsatr='exa --icons --long --all --sort modified'
fi

# HACK these ls shenanigans mostly just for macos
if [[ "$(uname -s)" == "Linux" ]];then
  alias ls='ls --color=auto'
else
  # use ohmyzsh seems to set this, disabling because conflict with LS_COLORS
  # unset LSCOLORS
  # gnu coreutils for ls on affects macos and brew
  # export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

  # ls colors seems broken after antigen macos
  if [[ -e /usr/local/bin/gls ]];then
    alias ls='gls --color=auto'
  else
    # why use gls if macos ls works with -G
     alias ls='ls -G'
  fi
fi

########################################################################
# setup zsh
HISTFILE=$HOME/.zhistory
HISTSIZE=5000
SAVEHIST=5000
# don't save passwords in history
HISTORY_IGNORE=td:todo:today:next:today:tomorrow:week:wl:work:worklog:jrnl:zk
setopt HIST_IGNORE_SPACE
setopt SHARE_HISTORY
setopt HASH_LIST_ALL

# disable % when no newline
PROMPT_EOL_MARK=''

# Disable autocorrect guesses. Happens when typing a wrong
unsetopt CORRECT
# Disable autocorrection
DISABLE_CORRECTION="true"

# Enable shell completions, this used to be provided by ohmyzsh
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$(brew --prefix)/share/zsh-completions:$FPATH

  autoload -Uz compinit
  compinit
fi

########################################################################
# setup iterm on macos
# test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

########################################################################
# setup powerline for tmux and vi
[[ "$(uname -s)" == "Linux" ]] && powerline-daemon -q

########################################################################
# private environment stuff that should not be synced to github
test -e $HOME/.bash_private && source $HOME/.bash_private

# test -e $HOME/bin/finto-helpers.sh && source $HOME/bin/finto-helpers.sh

########################################################################
# setup op
alias ops='eval $(op signin)'
alias ops-check='op list vaults'

########################################################################
# set keymappings
# vi mode has to be set after antigen oh-my-zsh else it gets lost
bindkey -v
# macbook pro with touchbar and ipad both have no ESC key, map them to jj
# bindkey -M viins 'jj' vi-cmd-mode

########################################################################
# calendars
# TODO move these into shell scripts
alias today='khal calendar --format "{calendar-color}{start-end-time-style} {title} {location}"'
alias next='khal list --format "{calendar-color}{start-end-time-style} {title} {location}" $(date "+%Y-%m-%d 00:00") $(date "+%Y-%m-%d 23:59")'
alias tomorrow='khal list --format "{calendar-color}{start-end-time-style} {title} {location}" $(date --date=tomorrow "+%Y-%m-%d 00:00") $(date --date=tomorrow "+%Y-%m-%d 23:59")'
alias week='khal list --format "{calendar-color}{start-end-time-style} {title} {location}" $(date --date="last monday" "+%Y-%m-%d 00:00") $(date --date="next sunday" "+%Y-%m-%d 23:59") --once'

########################################################################
# setup jira
export JIRA_CONFIG="$HOME/.jira/config.json"

########################################################################
# setup calendar syncing
CALDIR="$HOME/.local/share/calendars"
alias sync-cal='vdirsyncer sync outlook'
alias sync-cals='vdirsyncer sync'
alias sync-cals-git='git -C "$CALDIR" add *;git -C "$CALDIR" commit -m $(date "+%Y-%m-%d-%H-%M-%S") -a'

########################################################################
# setup perl
# TODO why do I need this, exiftool may be the only perl I use anymore?
if [[ -d "$HOME/perl5" ]];then
  PATH="$HOME/perl5/bin${PATH:+:${PATH}}"; export PATH;
  PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
  PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
  PERL_MB_OPT="--install_base \"$HOME/perl5\""; export PERL_MB_OPT;
  PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"; export PERL_MM_OPT;
fi

########################################################################
# setup prompt
if which starship > /dev/null 2>&1 ;then
  # setup starship for prompt if installed
  eval "$(starship init zsh)"
else
  # fallback to powerline i guess
  test -e /usr/share/powerline/zsh/powerline.sh && source /usr/share/powerline/zsh/powerline.sh
fi

########################################################################
# disable global apple zsh function defaults
[[ "$(uname -s)" == "Darwin" ]] && unfunction update_terminal_cwd > /dev/null 2>&1 

########################################################################
# misc
alias highlight='highlight -O xterm256 -s candy'
alias highmd='highlight -S markdown -O xterm256 -s candy'
alias highxml='highlight -S xml -O xterm256 -s candy'
alias highhtml='highlight -S html -O xterm256 -s candy'
alias highjson='highlight -S json -O xterm256 -s candy'

########################################################################
# setup gpg github
# FIXME this breaks zsh and or tmux 
# export GPG_TTY=$(tty)

# fin
